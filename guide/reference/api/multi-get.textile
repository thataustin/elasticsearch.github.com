---
layout: guide
title: Multi Get API
cat: guide
sidebar: reference_api
---

p. Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). The response includes a @docs@ array with all the fetched documents, each element similar in structure to a document provided by the "get":/guide/reference/api/get.html API. Here is an example:

<pre class="prettyprint">
curl 'localhost:9200/_mget' -d '{
    "docs" : [
        {
            "_index" : "test",
            "_type" : "type",
            "_id" : "1"
        },
        {
            "_index" : "test",
            "_type" : "type",
            "_id" : "2"
        }
    ]
}'
</pre>

p. The @mget@ endpoint can also be used against an index (in which case it's not required in the body):

<pre class="prettyprint">
curl 'localhost:9200/test/_mget' -d '{
    "docs" : [
        {
            "_type" : "type",
            "_id" : "1"
        },
        {
            "_type" : "type",
            "_id" : "2"
        }
    ]
}'
</pre>

p. And type:

<pre class="prettyprint">
curl 'localhost:9200/test/type/_mget' -d '{
    "docs" : [
        {
            "_id" : "1"
        },
        {
            "_id" : "2"
        }
    ]
}'
</pre>

p. In which case, the @ids@ element can directly be used to simplify the request:

<pre class="prettyprint">
curl 'localhost:9200/test/type/_mget' -d '{
    "ids" : ["1", "2"]
}'
</pre>

h2. Fields

p. Specific fields can be specified to be retrieved per document to get. For example:

<pre class="prettyprint">
curl 'localhost:9200/_mget' -d '{
    "docs" : [
        {
            "_index" : "test",
            "_type" : "type",
            "_id" : "1",
            "fields" : ["field1", "field2"]
        },
        {
            "_index" : "test",
            "_type" : "type",
            "_id" : "2",
            "fields" : ["field3", "field4"]
        }
    ]
}'
</pre>
